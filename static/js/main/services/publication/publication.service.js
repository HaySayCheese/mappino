// Generated by CoffeeScript 1.9.2
(function() {
  'use strict';

  /**
   * @class
   * @description todo: add desc
   * @version 0.0.1
   * @license todo: add license
   */
  var MPublicationService, mappinoMapModule;

  MPublicationService = (function() {
    function MPublicationService(http1) {
      this.http = http1;
      this.publication = {
        'data': null,
        'contacts': null,
        'similar': null
      };
    }


    /**
     * @public
     * @description Load publication data by 'id:hash_id'
    #
     * @param {string} id_part               - Publication type_id:hash_id
     * @param {function()} [successCallback] - Success callback
     * @param {function()} [errorCallback]   - Error callback
     */

    MPublicationService.prototype.getPublicationData = function(id_part, successCallback, errorCallback) {
      var request, self;
      self = this;
      this.publication.data = null;
      request = this.http.get("/ajax/api/detailed/publication/" + id_part + "/");
      request.success(function(response) {
        self.publication.data = response;
        _.isFunction(successCallback) && successCallback(response);
        if (response.code !== 0) {
          return _.isFunction(errorCallback) && errorCallback({
            'code': response.code
          });
        }
      });
      return request.error(function() {
        return _.isFunction(errorCallback) && errorCallback();
      });
    };


    /**
     * @public
     * @description Load publication contacts by 'id:hash_id'
    #
     * @param {string} id_part               - Publication type_id:hash_id
     * @param {function()} [successCallback] - Success callback
     * @param {function()} [errorCallback]   - Error callback
     */

    MPublicationService.prototype.getPublicationContacts = function(id_part, successCallback, errorCallback) {
      var request, self;
      self = this;
      this.publication.contacts = null;
      request = this.http.get("/ajax/api/detailed/publication/" + id_part + "/contacts/");
      request.success(function(response) {
        if (response.code === 0) {
          self.publication.contacts = response;
          _.isFunction(successCallback) && successCallback(response);
        }
        if (response.code !== 0) {
          return _.isFunction(errorCallback) && errorCallback({
            'code': response.code
          });
        }
      });
      return request.error(function() {
        return _.isFunction(errorCallback) && errorCallback();
      });
    };


    /**
     * @public
     * @description Load similar publication by 'id:hash_id'
    #
     * @param {string} id_part               - Publication type_id:hash_id
     * @param {function()} [successCallback] - Success callback
     * @param {function()} [errorCallback]   - Error callback
     */

    MPublicationService.prototype.getPublicationSimilar = function(id_part, successCallback, errorCallback) {
      var request, self;
      self = this;
      this.publication.similar = null;
      request = this.http.get("/ajax/api/detailed/publication/" + id_part + "/similar/");
      request.success(function(response) {
        if (response.code === 0) {
          self.publication.similar = response;
          _.isFunction(successCallback) && successCallback(response);
        }
        if (response.code !== 0) {
          return _.isFunction(errorCallback) && errorCallback({
            'code': response.code
          });
        }
      });
      return request.error(function() {
        return _.isFunction(errorCallback) && errorCallback();
      });
    };


    /**
     * @public
     * @description Seller call request
    #
     * @param {string} id_part                           - Publication type_id:hash_id
     * @param {object} merchant                          - Merchant object
     * @param {string} merchant.name                     - Merchant name
     * @param {(string|number)} merchant.phone_number    - Merchant phone number
     * @param {function()} [successCallback]             - Success callback
     * @param {function()} [errorCallback]               - Error callback
     */

    MPublicationService.prototype.sendCallRequestToSeller = function(id_part, merchant, successCallback, errorCallback) {
      var request;
      request = this.http.post("/ajax/api/notifications/send-call-request/" + id_part + "/", merchant);
      request.success(function(response) {
        if (response.code === 0) {
          _.isFunction(successCallback) && successCallback(response);
        }
        if (response.code !== 0) {
          return _.isFunction(errorCallback) && errorCallback({
            'code': response.code
          });
        }
      });
      return request.error(function() {
        return _.isFunction(errorCallback) && errorCallback();
      });
    };


    /**
     * @public
     * @description Seller call request
    #
     * @param {string} id_part                           - Publication type_id:hash_id
     * @param {object} merchant                          - Merchant object
     * @param {string} merchant.name                     - Merchant name
     * @param {(string|number)} merchant.phone_number    - Merchant phone number
     * @param {function()} [successCallback]             - Success callback
     * @param {function()} [errorCallback]               - Error callback
     */

    MPublicationService.prototype.sendMessageToSeller = function(id_part, merchant, successCallback, errorCallback) {
      var request;
      request = this.http.post("/ajax/api/notifications/send-message/" + id_part + "/", merchant);
      request.success(function(response) {
        if (response.code === 0) {
          _.isFunction(successCallback) && successCallback(response);
        }
        if (response.code !== 0) {
          return _.isFunction(errorCallback) && errorCallback({
            'code': response.code
          });
        }
      });
      return request.error(function() {
        return _.isFunction(errorCallback) && errorCallback();
      });
    };

    return MPublicationService;

  })();

  mappinoMapModule = angular.module('mappino.pages.map');

  mappinoMapModule.factory('MPublicationService', [
    '$http', function(http) {
      return new MPublicationService(http);
    }
  ]);

}).call(this);

//# sourceMappingURL=publication.service.js.map
