// Generated by CoffeeScript 1.9.2
(function() {
  'use strict';

  /**
   * @class
   * @description todo: add desc
   * @version 0.1.0
   * @license todo: add license
   */
  var MFavoritesService;

  MFavoritesService = (function() {
    function MFavoritesService($resource1) {
      this.$resource = $resource1;
      this.favorites = this.$resource("/ajax/api/favorites/:id");
    }


    /**
     * @public
     * @description Add publication to favorites
    #
     * @param {string} pid                   - Publication id ('tid:hid') as string
     * @param {function()} [successCallback] - Success callback
     * @param {function()} [errorCallback]   - Error callback
     */

    MFavoritesService.prototype.add = function(pid, successCallback, errorCallback) {
      var request;
      request = this.favorites.save({
        'id': pid
      });
      return request.$promise.then(function(response) {
        if (response.code === 0) {
          _.isFunction(successCallback) && successCallback();
        }
        if (response.code !== 0) {
          return _.isFunction(errorCallback) && errorCallback({
            'code': response.code
          });
        }
      }, function(response) {
        return _.isFunction(errorCallback) && errorCallback();
      });
    };


    /**
     * @public
     * @description Get all favorites
    #
     * @param {function()} [successCallback]     - Success callback
     * @param {function()} [errorCallback]       - Error callback
     */

    MFavoritesService.prototype.get = function(successCallback, errorCallback) {
      var request;
      request = this.favorites.query();
      return request.$promise.then(function(response) {
        if (response.code === 0) {
          _.isFunction(successCallback) && successCallback();
        }
        if (response.code !== 0) {
          return _.isFunction(errorCallback) && errorCallback({
            'code': response.code
          });
        }
      }, function(response) {
        return _.isFunction(errorCallback) && errorCallback();
      });
    };


    /**
     * @public
     * @description Remove publication from favorites
    #
     * @param {string} pid                   - Publication id ('tid:hid') as string
     * @param {function()} [successCallback] - Success callback
     * @param {function()} [errorCallback]   - Error callback
     */

    MFavoritesService.prototype.remove = function(pid, successCallback, errorCallback) {
      var request;
      request = this.favorites.remove({
        'id': pid
      });
      return request.$promise.then(function(response) {
        if (response.code === 0) {
          _.isFunction(successCallback) && successCallback();
        }
        if (response.code !== 0) {
          return _.isFunction(errorCallback) && errorCallback({
            'code': response.code
          });
        }
      }, function(response) {
        return _.isFunction(errorCallback) && errorCallback();
      });
    };

    return MFavoritesService;

  })();

  angular.module('mappino.pages.map').factory('MFavoritesService', [
    '$resource', function($resource) {
      return new MFavoritesService($resource);
    }
  ]);

}).call(this);

//# sourceMappingURL=favorites.service.js.map
