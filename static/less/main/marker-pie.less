
//
// Load core variables and mixins
// --------------------------------------------------

@import "../components/variables";
@import "../components/mixins";


/*
    Variables
*/
@smallPieWidth:  25px;
@smallPieHeight: 50px;
@smallMarkerChartInnerSize: @smallPieWidth;


@mediumPieWidth:  33px;
@mediumPieHeight: 66px;
@mediumMarkerChartInnerSize: @mediumPieWidth;


@largePieWidth:  50px;
@largePieHeight: 100px;
@largeMarkerChartInnerSize: @largePieWidth;

/*
    Pie chart container
*/
.marker-pie-chart {
    background: #fff;
    border: 3px solid #fff;
    border-radius: 50%;
    .box-shadow(~"0 0 5px @{gray-light}");


    /*
        Part of pie chart in container (red/blue/green/yellow)
    */
    .pie {
        position: absolute;
        overflow: hidden;
        .transform-origin(left center);

        &:before {
            content: "";
            position: absolute;
            .transform-origin(right center);
        }

        &:after,
        &:before {
            border-right: 1px solid #fff;
        }

        /*
            Colors of pie chart part
        */
        &.red:after,
        &.red:before {
            background-color: #fb6262;
        }
        &.blue:after,
        &.blue:before {
            background-color: #4996cc;
        }
        &.green:after,
        &.green:before {
            background-color: #71c187;
        }
        &.yellow:after,
        &.yellow:before {
            background-color: #ffc63e;
        }
    }


    /*
        Inner circle in pie chart which shows the number of publications
    */
    .marker-pie-chart-inner {
        position: absolute;
        z-index: 9999;
        text-align: center;
        font-size: 14px;
        background: #fff;
        border-radius: 50%;
    }


    /*
        Sizes of pie chart
    */
    &.small {
        .square(@smallPieHeight + 6);

        .marker-pie-chart-inner {
            .square(@smallMarkerChartInnerSize);
            padding-top: 2px;
            left:   @smallMarkerChartInnerSize / 2 - 1; // Why -1? I'm don't know :)
            top:    @smallMarkerChartInnerSize / 2 - 1;
        }

        .pie {
            width:  @smallPieWidth;
            height: @smallPieHeight;
            left:   @smallPieWidth;

            &:before {
                width:  @smallPieWidth;
                height: @smallPieHeight;
                left:   -@smallPieWidth;
                border-radius: @smallPieWidth 0 0 @smallPieWidth;
            }
        }
    }
    &.medium {
        .square(@mediumPieHeight + 6);

        .marker-pie-chart-inner {
            .square(@mediumMarkerChartInnerSize);
            padding-top: 6px;
            left:   @mediumMarkerChartInnerSize / 2 - 1; // Why -1? I'm don't know :)
            top:    @mediumMarkerChartInnerSize / 2;
        }

        .pie {
            width:  @mediumPieWidth;
            height: @mediumPieHeight;
            left:   @mediumPieWidth;

            &:before {
                width:  @mediumPieWidth;
                height: @mediumPieHeight;
                left:   -@mediumPieWidth;
                border-radius: @mediumPieWidth 0 0 @mediumPieWidth;
            }
        }
    }
    &.large {
        .square(@largePieHeight + 6);

        .marker-pie-chart-inner {
            .square(@largeMarkerChartInnerSize);
            padding-top: 15px;
            left:   @largeMarkerChartInnerSize / 2 - 1; // Why -1? I'm don't know :)
            top:    @largeMarkerChartInnerSize / 2;
        }

        .pie {
            width:  @largePieWidth;
            height: @largePieHeight;
            left:   @largePieWidth;

            &:before {
                width:  @largePieWidth;
                height: @largePieHeight;
                left:   -@largePieWidth;
                border-radius: @largePieWidth 0 0 @largePieWidth;
            }
        }
    }
}


//.pie[data-start="90"] {
//    .rotate(90deg);
//}
//.pie[data-start="180"] {
//    .rotate(180deg);
//}
//.pie[data-start="270"] {
//    .rotate(270deg);
//}
//
//
//.pie[data-value="90"]:before {
//    .rotate(90deg);
//}


//.pie[data-start] {
//    transform: rotate(attr(data-start));
//}
//.pie[data-value]:before {
//    transform: rotate(attr(data-value));
//}

/*
NOTE: you could also apply custom classes (i.e. .s0 .v30)
but if the CSS3 attr() function proposal ever gets implemented,
then all the above custom piece rules could be replaced with
the following:

.pie[data-start] {
   transform:rotate(attr(data-start,deg,0);
}
.pie[data-value]:BEFORE {
   transform:rotate(attr(data-value,deg,0);
}
*/