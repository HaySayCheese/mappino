# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import collective.utils
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FlatsBodies',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('title', models.TextField(null=True, help_text='')),
                ('description', models.TextField(null=True, help_text='')),
                ('address', models.TextField(null=True, help_text='')),
                ('market_type_sid', models.SmallIntegerField(default=1, help_text='')),
                ('building_type_sid', models.SmallIntegerField(default=1, help_text='')),
                ('custom_building_type', models.TextField(null=True, help_text='')),
                ('condition_sid', models.SmallIntegerField(default=1, help_text='')),
                ('total_area', models.FloatField(null=True, help_text='')),
                ('living_area', models.FloatField(null=True, help_text='')),
                ('kitchen_area', models.FloatField(null=True, help_text='')),
                ('floors_count', models.SmallIntegerField(null=True, help_text='')),
                ('floor', models.SmallIntegerField(null=True, help_text='')),
                ('floor_type_sid', models.SmallIntegerField(default=0, help_text='')),
                ('rooms_count', models.PositiveSmallIntegerField(null=True, help_text='')),
                ('rooms_planning_sid', models.SmallIntegerField(default=1, help_text='')),
                ('ceiling_height', models.FloatField(null=True, help_text='')),
                ('heating_type_sid', models.SmallIntegerField(default=2, help_text='')),
                ('custom_heating_type', models.TextField(null=True, help_text='')),
                ('ind_heating_type_sid', models.SmallIntegerField(default=2, help_text='')),
                ('custom_ind_heating_type', models.TextField(null=True, help_text='')),
                ('electricity', models.BooleanField(default=False, help_text='')),
                ('gas', models.BooleanField(default=False, help_text='')),
                ('hot_water', models.BooleanField(default=False, help_text='')),
                ('cold_water', models.BooleanField(default=False, help_text='')),
                ('security_alarm', models.BooleanField(default=False, help_text='')),
                ('fire_alarm', models.BooleanField(default=False, help_text='')),
                ('lift', models.BooleanField(default=False, help_text='')),
                ('add_facilities', models.TextField(null=True, help_text='')),
                ('phone', models.BooleanField(default=False, help_text='')),
                ('internet', models.BooleanField(default=False, help_text='')),
                ('mobile_coverage', models.BooleanField(default=False, help_text='')),
                ('cable_tv', models.BooleanField(default=False, help_text='')),
                ('garage', models.BooleanField(default=False, help_text='')),
                ('playground', models.BooleanField(default=False, help_text='')),
                ('add_buildings', models.TextField(null=True, help_text='')),
            ],
            options={
                'db_table': 'o_flats_bodies',
            },
        ),
        migrations.CreateModel(
            name='FlatsDailyRentReservations',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('date_enter', models.DateField(db_index=True, help_text='')),
                ('date_leave', models.DateField(db_index=True, help_text='')),
                ('client_name', models.TextField(null=True, help_text='')),
            ],
            options={
                'db_table': 'o_flats_daily_rent_reservations',
            },
        ),
        migrations.CreateModel(
            name='FlatsHeads',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('hash_id', models.TextField(unique=True, db_index=True, default=collective.utils.generate_sha256_unique_id, help_text='')),
                ('state_sid', models.SmallIntegerField(db_index=True, default=1, help_text='')),
                ('for_sale', models.BooleanField(default=False, help_text='')),
                ('for_rent', models.BooleanField(default=False, help_text='')),
                ('created', models.DateTimeField(help_text='', auto_now_add=True)),
                ('modified', models.DateTimeField(help_text='', auto_now=True)),
                ('published', models.DateTimeField(null=True, help_text='')),
                ('deleted', models.DateTimeField(null=True, help_text='')),
                ('actual', models.DateTimeField(null=True, help_text='')),
                ('degree_lat', models.TextField(null=True, help_text='')),
                ('degree_lng', models.TextField(null=True, help_text='')),
                ('segment_lat', models.TextField(null=True, help_text='')),
                ('segment_lng', models.TextField(null=True, help_text='')),
                ('pos_lat', models.TextField(null=True, help_text='')),
                ('pos_lng', models.TextField(null=True, help_text='')),
                ('body', models.ForeignKey(help_text='', to='publications.FlatsBodies')),
                ('owner', models.ForeignKey(help_text='', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'o_flats_heads',
            },
        ),
        migrations.CreateModel(
            name='FlatsPhotos',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('hash_id', models.TextField(db_index=True, help_text='')),
                ('original_image_url', models.TextField(help_text='')),
                ('photo_url', models.TextField(help_text='')),
                ('big_thumb_url', models.TextField(help_text='')),
                ('is_title', models.BooleanField(default=False, help_text='')),
                ('created', models.DateTimeField(help_text='', auto_now_add=True)),
                ('publication', models.ForeignKey(help_text='', to='publications.FlatsHeads')),
            ],
            options={
                'db_table': 'img_flats_photos',
            },
        ),
        migrations.CreateModel(
            name='FlatsRentTerms',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('price', models.DecimalField(null=True, help_text='', max_digits=18, decimal_places=2)),
                ('currency_sid', models.SmallIntegerField(default=0, help_text='')),
                ('is_contract', models.BooleanField(default=False, help_text='')),
                ('period_sid', models.SmallIntegerField(default=1, help_text='')),
                ('persons_count', models.SmallIntegerField(null=True, help_text='')),
                ('furniture', models.BooleanField(default=False, help_text='')),
                ('refrigerator', models.BooleanField(default=False, help_text='')),
                ('tv', models.BooleanField(default=False, help_text='')),
                ('washing_machine', models.BooleanField(default=False, help_text='')),
                ('conditioner', models.BooleanField(default=False, help_text='')),
                ('home_theater', models.BooleanField(default=False, help_text='')),
            ],
            options={
                'db_table': 'o_flats_rent_terms',
            },
        ),
        migrations.CreateModel(
            name='FlatsSaleTerms',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('price', models.DecimalField(null=True, help_text='', max_digits=18, decimal_places=2)),
                ('currency_sid', models.SmallIntegerField(default=0, help_text='')),
                ('is_contract', models.BooleanField(default=False, help_text='')),
                ('transaction_sid', models.SmallIntegerField(default=0, help_text='')),
            ],
            options={
                'db_table': 'o_flats_sale_terms',
            },
        ),
        migrations.CreateModel(
            name='GaragesBodies',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('title', models.TextField(null=True, help_text='')),
                ('description', models.TextField(null=True, help_text='')),
                ('address', models.TextField(null=True, help_text='')),
                ('market_type_sid', models.SmallIntegerField(default=1, help_text='')),
                ('area', models.FloatField(null=True, help_text='')),
                ('ceiling_height', models.FloatField(null=True, help_text='')),
                ('pit', models.BooleanField(default=False, help_text='')),
                ('electricity', models.BooleanField(default=False, help_text='')),
                ('gas', models.BooleanField(default=False, help_text='')),
                ('hot_water', models.BooleanField(default=False, help_text='')),
                ('cold_water', models.BooleanField(default=False, help_text='')),
                ('ventilation', models.BooleanField(default=False, help_text='')),
                ('security_alarm', models.BooleanField(default=False, help_text='')),
                ('fire_alarm', models.BooleanField(default=False, help_text='')),
                ('security', models.BooleanField(default=False, help_text='')),
                ('add_facilities', models.TextField(null=True, help_text='')),
            ],
            options={
                'db_table': 'o_garages_bodies',
            },
        ),
        migrations.CreateModel(
            name='GaragesHeads',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('hash_id', models.TextField(unique=True, db_index=True, default=collective.utils.generate_sha256_unique_id, help_text='')),
                ('state_sid', models.SmallIntegerField(db_index=True, default=1, help_text='')),
                ('for_sale', models.BooleanField(default=False, help_text='')),
                ('for_rent', models.BooleanField(default=False, help_text='')),
                ('created', models.DateTimeField(help_text='', auto_now_add=True)),
                ('modified', models.DateTimeField(help_text='', auto_now=True)),
                ('published', models.DateTimeField(null=True, help_text='')),
                ('deleted', models.DateTimeField(null=True, help_text='')),
                ('actual', models.DateTimeField(null=True, help_text='')),
                ('degree_lat', models.TextField(null=True, help_text='')),
                ('degree_lng', models.TextField(null=True, help_text='')),
                ('segment_lat', models.TextField(null=True, help_text='')),
                ('segment_lng', models.TextField(null=True, help_text='')),
                ('pos_lat', models.TextField(null=True, help_text='')),
                ('pos_lng', models.TextField(null=True, help_text='')),
                ('body', models.ForeignKey(help_text='', to='publications.GaragesBodies')),
                ('owner', models.ForeignKey(help_text='', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'o_garages_heads',
            },
        ),
        migrations.CreateModel(
            name='GaragesPhotos',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('hash_id', models.TextField(db_index=True, help_text='')),
                ('original_image_url', models.TextField(help_text='')),
                ('photo_url', models.TextField(help_text='')),
                ('big_thumb_url', models.TextField(help_text='')),
                ('is_title', models.BooleanField(default=False, help_text='')),
                ('created', models.DateTimeField(help_text='', auto_now_add=True)),
                ('publication', models.ForeignKey(help_text='', to='publications.GaragesHeads')),
            ],
            options={
                'db_table': 'img_garages_photos',
            },
        ),
        migrations.CreateModel(
            name='GaragesRentTerms',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('price', models.DecimalField(null=True, help_text='', max_digits=18, decimal_places=2)),
                ('currency_sid', models.SmallIntegerField(default=0, help_text='')),
                ('is_contract', models.BooleanField(default=False, help_text='')),
                ('period_sid', models.SmallIntegerField(default=1, help_text='')),
                ('add_terms', models.TextField(default=b'', help_text='')),
            ],
            options={
                'db_table': 'o_garages_rent_terms',
            },
        ),
        migrations.CreateModel(
            name='GaragesSaleTerms',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('price', models.DecimalField(null=True, help_text='', max_digits=18, decimal_places=2)),
                ('currency_sid', models.SmallIntegerField(default=0, help_text='')),
                ('is_contract', models.BooleanField(default=False, help_text='')),
                ('transaction_sid', models.SmallIntegerField(default=0, help_text='')),
            ],
            options={
                'db_table': 'o_garages_sale_terms',
            },
        ),
        migrations.CreateModel(
            name='HousesBodies',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('title', models.TextField(null=True, help_text='')),
                ('description', models.TextField(null=True, help_text='')),
                ('address', models.TextField(null=True, help_text='')),
                ('market_type_sid', models.SmallIntegerField(default=1, help_text='')),
                ('condition_sid', models.SmallIntegerField(default=1, help_text='')),
                ('total_area', models.FloatField(null=True, help_text='')),
                ('living_area', models.FloatField(null=True, help_text='')),
                ('kitchen_area', models.FloatField(null=True, help_text='')),
                ('mansard', models.BooleanField(default=False, help_text='')),
                ('ground', models.BooleanField(default=False, help_text='')),
                ('lower_floor', models.BooleanField(default=False, help_text='')),
                ('floors_count', models.SmallIntegerField(null=True, help_text='')),
                ('rooms_count', models.PositiveSmallIntegerField(null=True, help_text='')),
                ('heating_type_sid', models.SmallIntegerField(default=1, help_text='')),
                ('custom_heating_type', models.TextField(null=True, help_text='')),
                ('ind_heating_type_sid', models.SmallIntegerField(default=2, help_text='')),
                ('custom_ind_heating_type', models.TextField(null=True, help_text='')),
                ('electricity', models.BooleanField(default=False, help_text='')),
                ('gas', models.BooleanField(default=False, help_text='')),
                ('sewerage', models.BooleanField(default=False, help_text='')),
                ('hot_water', models.BooleanField(default=False, help_text='')),
                ('cold_water', models.BooleanField(default=False, help_text='')),
                ('security_alarm', models.BooleanField(default=False, help_text='')),
                ('fire_alarm', models.BooleanField(default=False, help_text='')),
                ('add_facilities', models.TextField(null=True, help_text='')),
                ('phone', models.BooleanField(default=False, help_text='')),
                ('internet', models.BooleanField(default=False, help_text='')),
                ('mobile_coverage', models.BooleanField(default=False, help_text='')),
                ('cable_tv', models.BooleanField(default=False, help_text='')),
                ('garage', models.BooleanField(default=False, help_text='')),
                ('fence', models.BooleanField(default=False, help_text='')),
                ('terrace', models.BooleanField(default=False, help_text='')),
                ('well', models.BooleanField(default=False, help_text='')),
                ('alcove', models.BooleanField(default=False, help_text='')),
                ('kaleyard', models.BooleanField(default=False, help_text='')),
                ('garden', models.BooleanField(default=False, help_text='')),
                ('pool', models.BooleanField(default=False, help_text='')),
                ('cellar', models.BooleanField(default=False, help_text='')),
                ('add_buildings', models.TextField(null=True, help_text='')),
            ],
            options={
                'db_table': 'o_houses_bodies',
            },
        ),
        migrations.CreateModel(
            name='HousesDailyRentReservations',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('date_enter', models.DateField(db_index=True, help_text='')),
                ('date_leave', models.DateField(db_index=True, help_text='')),
                ('client_name', models.TextField(null=True, help_text='')),
            ],
            options={
                'db_table': 'o_houses_daily_rent_reservations',
            },
        ),
        migrations.CreateModel(
            name='HousesHeads',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('hash_id', models.TextField(unique=True, db_index=True, default=collective.utils.generate_sha256_unique_id, help_text='')),
                ('state_sid', models.SmallIntegerField(db_index=True, default=1, help_text='')),
                ('for_sale', models.BooleanField(default=False, help_text='')),
                ('for_rent', models.BooleanField(default=False, help_text='')),
                ('created', models.DateTimeField(help_text='', auto_now_add=True)),
                ('modified', models.DateTimeField(help_text='', auto_now=True)),
                ('published', models.DateTimeField(null=True, help_text='')),
                ('deleted', models.DateTimeField(null=True, help_text='')),
                ('actual', models.DateTimeField(null=True, help_text='')),
                ('degree_lat', models.TextField(null=True, help_text='')),
                ('degree_lng', models.TextField(null=True, help_text='')),
                ('segment_lat', models.TextField(null=True, help_text='')),
                ('segment_lng', models.TextField(null=True, help_text='')),
                ('pos_lat', models.TextField(null=True, help_text='')),
                ('pos_lng', models.TextField(null=True, help_text='')),
                ('body', models.ForeignKey(help_text='', to='publications.HousesBodies')),
                ('owner', models.ForeignKey(help_text='', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'o_houses_heads',
            },
        ),
        migrations.CreateModel(
            name='HousesPhotos',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('hash_id', models.TextField(db_index=True, help_text='')),
                ('original_image_url', models.TextField(help_text='')),
                ('photo_url', models.TextField(help_text='')),
                ('big_thumb_url', models.TextField(help_text='')),
                ('is_title', models.BooleanField(default=False, help_text='')),
                ('created', models.DateTimeField(help_text='', auto_now_add=True)),
                ('publication', models.ForeignKey(help_text='', to='publications.HousesHeads')),
            ],
            options={
                'db_table': 'img_houses_photos',
            },
        ),
        migrations.CreateModel(
            name='HousesRentTerms',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('price', models.DecimalField(null=True, help_text='', max_digits=18, decimal_places=2)),
                ('currency_sid', models.SmallIntegerField(default=0, help_text='')),
                ('is_contract', models.BooleanField(default=False, help_text='')),
                ('period_sid', models.SmallIntegerField(default=1, help_text='')),
                ('persons_count', models.SmallIntegerField(null=True, help_text='')),
                ('furniture', models.BooleanField(default=False, help_text='')),
                ('refrigerator', models.BooleanField(default=False, help_text='')),
                ('tv', models.BooleanField(default=False, help_text='')),
                ('washing_machine', models.BooleanField(default=False, help_text='')),
                ('conditioner', models.BooleanField(default=False, help_text='')),
                ('home_theater', models.BooleanField(default=False, help_text='')),
                ('rent_type_sid', models.SmallIntegerField(default=0, help_text='')),
            ],
            options={
                'db_table': 'o_houses_rent_terms',
            },
        ),
        migrations.CreateModel(
            name='HousesSaleTerms',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('price', models.DecimalField(null=True, help_text='', max_digits=18, decimal_places=2)),
                ('currency_sid', models.SmallIntegerField(default=0, help_text='')),
                ('is_contract', models.BooleanField(default=False, help_text='')),
                ('transaction_sid', models.SmallIntegerField(default=0, help_text='')),
                ('sale_type_sid', models.SmallIntegerField(default=0, help_text='')),
            ],
            options={
                'db_table': 'o_houses_sale_terms',
            },
        ),
        migrations.CreateModel(
            name='LandsBodies',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('title', models.TextField(null=True, help_text='')),
                ('description', models.TextField(null=True, help_text='')),
                ('address', models.TextField(null=True, help_text='')),
                ('destination_sid', models.SmallIntegerField(null=True, help_text='')),
                ('area', models.FloatField(null=True, help_text='')),
                ('closed_area', models.BooleanField(default=False, help_text='')),
                ('electricity', models.BooleanField(default=False, help_text='')),
                ('gas', models.BooleanField(default=False, help_text='')),
                ('water', models.BooleanField(default=False, help_text='')),
                ('sewerage', models.BooleanField(default=False, help_text='')),
                ('add_facilities', models.TextField(null=True, help_text='')),
                ('well', models.BooleanField(default=False, help_text='')),
                ('add_buildings', models.TextField(null=True, help_text='')),
                ('transport_stop', models.BooleanField(default=False, help_text='')),
                ('market', models.BooleanField(default=False, help_text='')),
                ('cafe', models.BooleanField(default=False, help_text='')),
                ('bank', models.BooleanField(default=False, help_text='')),
                ('cash_machine', models.BooleanField(default=False, help_text='')),
                ('entertainment', models.BooleanField(default=False, help_text='')),
                ('add_showplaces', models.TextField(null=True, help_text='')),
            ],
            options={
                'db_table': 'o_lands_bodies',
            },
        ),
        migrations.CreateModel(
            name='LandsHeads',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('hash_id', models.TextField(unique=True, db_index=True, default=collective.utils.generate_sha256_unique_id, help_text='')),
                ('state_sid', models.SmallIntegerField(db_index=True, default=1, help_text='')),
                ('for_sale', models.BooleanField(default=False, help_text='')),
                ('for_rent', models.BooleanField(default=False, help_text='')),
                ('created', models.DateTimeField(help_text='', auto_now_add=True)),
                ('modified', models.DateTimeField(help_text='', auto_now=True)),
                ('published', models.DateTimeField(null=True, help_text='')),
                ('deleted', models.DateTimeField(null=True, help_text='')),
                ('actual', models.DateTimeField(null=True, help_text='')),
                ('degree_lat', models.TextField(null=True, help_text='')),
                ('degree_lng', models.TextField(null=True, help_text='')),
                ('segment_lat', models.TextField(null=True, help_text='')),
                ('segment_lng', models.TextField(null=True, help_text='')),
                ('pos_lat', models.TextField(null=True, help_text='')),
                ('pos_lng', models.TextField(null=True, help_text='')),
                ('body', models.ForeignKey(help_text='', to='publications.LandsBodies')),
                ('owner', models.ForeignKey(help_text='', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'o_lands_heads',
            },
        ),
        migrations.CreateModel(
            name='LandsPhotos',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('hash_id', models.TextField(db_index=True, help_text='')),
                ('original_image_url', models.TextField(help_text='')),
                ('photo_url', models.TextField(help_text='')),
                ('big_thumb_url', models.TextField(help_text='')),
                ('is_title', models.BooleanField(default=False, help_text='')),
                ('created', models.DateTimeField(help_text='', auto_now_add=True)),
                ('publication', models.ForeignKey(help_text='', to='publications.LandsHeads')),
            ],
            options={
                'db_table': 'img_lands_photos',
            },
        ),
        migrations.CreateModel(
            name='LandsRentTerms',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('price', models.DecimalField(null=True, help_text='', max_digits=18, decimal_places=2)),
                ('currency_sid', models.SmallIntegerField(default=0, help_text='')),
                ('is_contract', models.BooleanField(default=False, help_text='')),
                ('period_sid', models.SmallIntegerField(default=1, help_text='')),
                ('add_terms', models.TextField(default=b'', help_text='')),
            ],
            options={
                'db_table': 'o_lands_rent_terms',
            },
        ),
        migrations.CreateModel(
            name='LandsSaleTerms',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('price', models.DecimalField(null=True, help_text='', max_digits=18, decimal_places=2)),
                ('currency_sid', models.SmallIntegerField(default=0, help_text='')),
                ('is_contract', models.BooleanField(default=False, help_text='')),
                ('transaction_sid', models.SmallIntegerField(default=0, help_text='')),
            ],
            options={
                'db_table': 'o_lands_sale_terms',
            },
        ),
        migrations.CreateModel(
            name='OfficesBodies',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('title', models.TextField(null=True, help_text='')),
                ('description', models.TextField(null=True, help_text='')),
                ('address', models.TextField(null=True, help_text='')),
                ('market_type_sid', models.SmallIntegerField(default=1, help_text='')),
                ('building_type_sid', models.SmallIntegerField(default=2, help_text='')),
                ('build_year', models.PositiveSmallIntegerField(null=True, help_text='')),
                ('condition_sid', models.SmallIntegerField(default=0, help_text='')),
                ('floor', models.SmallIntegerField(null=True, help_text='')),
                ('floor_type_sid', models.SmallIntegerField(default=0, help_text='')),
                ('floors_count', models.SmallIntegerField(null=True, help_text='')),
                ('cabinets_count', models.PositiveSmallIntegerField(null=True, help_text='')),
                ('cabinets_area', models.FloatField(null=True, help_text='')),
                ('total_area', models.FloatField(null=True, help_text='')),
                ('closed_area', models.BooleanField(default=False, help_text='')),
                ('ceiling_height', models.FloatField(null=True, help_text='')),
                ('heating_type_sid', models.SmallIntegerField(default=2, help_text='')),
                ('custom_heating_type', models.TextField(null=True, help_text='')),
                ('ind_heating_type_sid', models.SmallIntegerField(default=2, help_text='')),
                ('custom_ind_heating_type', models.TextField(null=True, help_text='')),
                ('hot_water', models.BooleanField(default=False, help_text='')),
                ('cold_water', models.BooleanField(default=False, help_text='')),
                ('kitchen', models.BooleanField(default=False, help_text='')),
                ('security_alarm', models.BooleanField(default=False, help_text='')),
                ('fire_alarm', models.BooleanField(default=False, help_text='')),
                ('security', models.BooleanField(default=False, help_text='')),
                ('add_equipment', models.TextField(null=True, help_text='')),
                ('add_facilities', models.TextField(null=True, help_text='')),
                ('phone', models.BooleanField(default=False, help_text='')),
                ('phone_lines_count', models.PositiveSmallIntegerField(null=True, help_text='')),
                ('internet', models.BooleanField(default=False, help_text='')),
                ('mobile_coverage', models.BooleanField(default=False, help_text='')),
                ('cable_tv', models.BooleanField(default=False, help_text='')),
                ('lan', models.BooleanField(default=False, help_text='')),
                ('parking', models.BooleanField(default=False, help_text='')),
                ('open_air', models.BooleanField(default=False, help_text='')),
                ('add_buildings', models.TextField(null=True, help_text='')),
            ],
            options={
                'db_table': 'o_offices_bodies',
            },
        ),
        migrations.CreateModel(
            name='OfficesHeads',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('hash_id', models.TextField(unique=True, db_index=True, default=collective.utils.generate_sha256_unique_id, help_text='')),
                ('state_sid', models.SmallIntegerField(db_index=True, default=1, help_text='')),
                ('for_sale', models.BooleanField(default=False, help_text='')),
                ('for_rent', models.BooleanField(default=False, help_text='')),
                ('created', models.DateTimeField(help_text='', auto_now_add=True)),
                ('modified', models.DateTimeField(help_text='', auto_now=True)),
                ('published', models.DateTimeField(null=True, help_text='')),
                ('deleted', models.DateTimeField(null=True, help_text='')),
                ('actual', models.DateTimeField(null=True, help_text='')),
                ('degree_lat', models.TextField(null=True, help_text='')),
                ('degree_lng', models.TextField(null=True, help_text='')),
                ('segment_lat', models.TextField(null=True, help_text='')),
                ('segment_lng', models.TextField(null=True, help_text='')),
                ('pos_lat', models.TextField(null=True, help_text='')),
                ('pos_lng', models.TextField(null=True, help_text='')),
                ('body', models.ForeignKey(help_text='', to='publications.OfficesBodies')),
                ('owner', models.ForeignKey(help_text='', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'o_offices_heads',
            },
        ),
        migrations.CreateModel(
            name='OfficesPhotos',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('hash_id', models.TextField(db_index=True, help_text='')),
                ('original_image_url', models.TextField(help_text='')),
                ('photo_url', models.TextField(help_text='')),
                ('big_thumb_url', models.TextField(help_text='')),
                ('is_title', models.BooleanField(default=False, help_text='')),
                ('created', models.DateTimeField(help_text='', auto_now_add=True)),
                ('publication', models.ForeignKey(help_text='', to='publications.OfficesHeads')),
            ],
            options={
                'db_table': 'img_offices_photos',
            },
        ),
        migrations.CreateModel(
            name='OfficesRentTerms',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('price', models.DecimalField(null=True, help_text='', max_digits=18, decimal_places=2)),
                ('currency_sid', models.SmallIntegerField(default=0, help_text='')),
                ('is_contract', models.BooleanField(default=False, help_text='')),
                ('period_sid', models.SmallIntegerField(default=1, help_text='')),
                ('add_terms', models.TextField(default=b'', help_text='')),
                ('furniture', models.BooleanField(default=False, help_text='')),
                ('conditioner', models.BooleanField(default=False, help_text='')),
            ],
            options={
                'db_table': 'o_offices_rent_terms',
            },
        ),
        migrations.CreateModel(
            name='OfficesSaleTerms',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('price', models.DecimalField(null=True, help_text='', max_digits=18, decimal_places=2)),
                ('currency_sid', models.SmallIntegerField(default=0, help_text='')),
                ('is_contract', models.BooleanField(default=False, help_text='')),
                ('transaction_sid', models.SmallIntegerField(default=0, help_text='')),
            ],
            options={
                'db_table': 'o_offices_sale_terms',
            },
        ),
        migrations.CreateModel(
            name='RoomsBodies',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('title', models.TextField(null=True, help_text='')),
                ('description', models.TextField(null=True, help_text='')),
                ('address', models.TextField(null=True, help_text='')),
                ('market_type_sid', models.SmallIntegerField(default=1, help_text='')),
                ('condition_sid', models.SmallIntegerField(default=1, help_text='')),
                ('area', models.FloatField(null=True, help_text='')),
                ('floor', models.SmallIntegerField(null=True, help_text='')),
                ('floor_type_sid', models.SmallIntegerField(default=0, help_text='')),
                ('floors_count', models.SmallIntegerField(null=True, help_text='')),
                ('electricity', models.BooleanField(default=False, help_text='')),
                ('gas', models.BooleanField(default=False, help_text='')),
                ('hot_water', models.BooleanField(default=False, help_text='')),
                ('cold_water', models.BooleanField(default=False, help_text='')),
                ('lift', models.BooleanField(default=False, help_text='')),
                ('add_facilities', models.TextField(null=True, help_text='')),
                ('phone', models.BooleanField(default=False, help_text='')),
                ('internet', models.BooleanField(default=False, help_text='')),
                ('mobile_coverage', models.BooleanField(default=False, help_text='')),
                ('cable_tv', models.BooleanField(default=False, help_text='')),
            ],
            options={
                'db_table': 'o_rooms_bodies',
            },
        ),
        migrations.CreateModel(
            name='RoomsDailyRentReservations',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('date_enter', models.DateField(db_index=True, help_text='')),
                ('date_leave', models.DateField(db_index=True, help_text='')),
                ('client_name', models.TextField(null=True, help_text='')),
            ],
            options={
                'db_table': 'o_rooms_daily_rent_reservations',
            },
        ),
        migrations.CreateModel(
            name='RoomsHeads',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('hash_id', models.TextField(unique=True, db_index=True, default=collective.utils.generate_sha256_unique_id, help_text='')),
                ('state_sid', models.SmallIntegerField(db_index=True, default=1, help_text='')),
                ('for_sale', models.BooleanField(default=False, help_text='')),
                ('for_rent', models.BooleanField(default=False, help_text='')),
                ('created', models.DateTimeField(help_text='', auto_now_add=True)),
                ('modified', models.DateTimeField(help_text='', auto_now=True)),
                ('published', models.DateTimeField(null=True, help_text='')),
                ('deleted', models.DateTimeField(null=True, help_text='')),
                ('actual', models.DateTimeField(null=True, help_text='')),
                ('degree_lat', models.TextField(null=True, help_text='')),
                ('degree_lng', models.TextField(null=True, help_text='')),
                ('segment_lat', models.TextField(null=True, help_text='')),
                ('segment_lng', models.TextField(null=True, help_text='')),
                ('pos_lat', models.TextField(null=True, help_text='')),
                ('pos_lng', models.TextField(null=True, help_text='')),
                ('body', models.ForeignKey(help_text='', to='publications.RoomsBodies')),
                ('owner', models.ForeignKey(help_text='', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'o_rooms_heads',
            },
        ),
        migrations.CreateModel(
            name='RoomsPhotos',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('hash_id', models.TextField(db_index=True, help_text='')),
                ('original_image_url', models.TextField(help_text='')),
                ('photo_url', models.TextField(help_text='')),
                ('big_thumb_url', models.TextField(help_text='')),
                ('is_title', models.BooleanField(default=False, help_text='')),
                ('created', models.DateTimeField(help_text='', auto_now_add=True)),
                ('publication', models.ForeignKey(help_text='', to='publications.RoomsHeads')),
            ],
            options={
                'db_table': 'img_rooms_photos',
            },
        ),
        migrations.CreateModel(
            name='RoomsRentTerms',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('price', models.DecimalField(null=True, help_text='', max_digits=18, decimal_places=2)),
                ('currency_sid', models.SmallIntegerField(default=0, help_text='')),
                ('is_contract', models.BooleanField(default=False, help_text='')),
                ('period_sid', models.SmallIntegerField(default=1, help_text='')),
                ('persons_count', models.SmallIntegerField(null=True, help_text='')),
                ('furniture', models.BooleanField(default=False, help_text='')),
                ('refrigerator', models.BooleanField(default=False, help_text='')),
                ('tv', models.BooleanField(default=False, help_text='')),
                ('washing_machine', models.BooleanField(default=False, help_text='')),
                ('conditioner', models.BooleanField(default=False, help_text='')),
                ('home_theater', models.BooleanField(default=False, help_text='')),
            ],
            options={
                'db_table': 'o_rooms_rent_terms',
            },
        ),
        migrations.CreateModel(
            name='RoomsSaleTerms',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('price', models.DecimalField(null=True, help_text='', max_digits=18, decimal_places=2)),
                ('currency_sid', models.SmallIntegerField(default=0, help_text='')),
                ('is_contract', models.BooleanField(default=False, help_text='')),
                ('transaction_sid', models.SmallIntegerField(default=0, help_text='')),
            ],
            options={
                'db_table': 'o_rooms_sale_terms',
            },
        ),
        migrations.CreateModel(
            name='TradesBodies',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('title', models.TextField(null=True, help_text='')),
                ('description', models.TextField(null=True, help_text='')),
                ('address', models.TextField(null=True, help_text='')),
                ('market_type_sid', models.SmallIntegerField(default=1, help_text='')),
                ('building_type_sid', models.SmallIntegerField(default=1, help_text='')),
                ('build_year', models.PositiveSmallIntegerField(null=True, help_text='')),
                ('condition_sid', models.SmallIntegerField(default=0, help_text='')),
                ('floor', models.SmallIntegerField(null=True, help_text='')),
                ('floor_type_sid', models.SmallIntegerField(default=0, help_text='')),
                ('floors_count', models.SmallIntegerField(null=True, help_text='')),
                ('mansard', models.BooleanField(default=False, help_text='')),
                ('ground', models.BooleanField(default=False, help_text='')),
                ('lower_floor', models.BooleanField(default=False, help_text='')),
                ('halls_count', models.PositiveSmallIntegerField(null=True, help_text='')),
                ('halls_area', models.FloatField(null=True, help_text='')),
                ('total_area', models.FloatField(null=True, help_text='')),
                ('closed_area', models.BooleanField(default=False, help_text='')),
                ('wcs_count', models.PositiveSmallIntegerField(null=True, help_text='')),
                ('ceiling_height', models.FloatField(null=True, help_text='')),
                ('heating_type_sid', models.SmallIntegerField(default=2, help_text='')),
                ('custom_heating_type', models.TextField(null=True, help_text='')),
                ('ind_heating_type_sid', models.SmallIntegerField(default=2, help_text='')),
                ('custom_ind_heating_type', models.TextField(null=True, help_text='')),
                ('electricity', models.BooleanField(default=False, help_text='')),
                ('gas', models.BooleanField(default=False, help_text='')),
                ('sewerage', models.BooleanField(default=False, help_text='')),
                ('hot_water', models.BooleanField(default=False, help_text='')),
                ('cold_water', models.BooleanField(default=False, help_text='')),
                ('ventilation', models.BooleanField(default=False, help_text='')),
                ('security_alarm', models.BooleanField(default=False, help_text='')),
                ('fire_alarm', models.BooleanField(default=False, help_text='')),
                ('security', models.BooleanField(default=False, help_text='')),
                ('add_facilities', models.TextField(null=True, help_text='')),
                ('phone', models.BooleanField(default=False, help_text='')),
                ('phone_lines_count', models.PositiveSmallIntegerField(null=True, help_text='')),
                ('internet', models.BooleanField(default=False, help_text='')),
                ('mobile_coverage', models.BooleanField(default=False, help_text='')),
                ('cable_tv', models.BooleanField(default=False, help_text='')),
                ('lan', models.BooleanField(default=False, help_text='')),
                ('parking', models.BooleanField(default=False, help_text='')),
                ('open_air', models.BooleanField(default=False, help_text='')),
                ('add_buildings', models.TextField(null=True, help_text='')),
            ],
            options={
                'db_table': 'o_trades_bodies',
            },
        ),
        migrations.CreateModel(
            name='TradesHeads',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('hash_id', models.TextField(unique=True, db_index=True, default=collective.utils.generate_sha256_unique_id, help_text='')),
                ('state_sid', models.SmallIntegerField(db_index=True, default=1, help_text='')),
                ('for_sale', models.BooleanField(default=False, help_text='')),
                ('for_rent', models.BooleanField(default=False, help_text='')),
                ('created', models.DateTimeField(help_text='', auto_now_add=True)),
                ('modified', models.DateTimeField(help_text='', auto_now=True)),
                ('published', models.DateTimeField(null=True, help_text='')),
                ('deleted', models.DateTimeField(null=True, help_text='')),
                ('actual', models.DateTimeField(null=True, help_text='')),
                ('degree_lat', models.TextField(null=True, help_text='')),
                ('degree_lng', models.TextField(null=True, help_text='')),
                ('segment_lat', models.TextField(null=True, help_text='')),
                ('segment_lng', models.TextField(null=True, help_text='')),
                ('pos_lat', models.TextField(null=True, help_text='')),
                ('pos_lng', models.TextField(null=True, help_text='')),
                ('body', models.ForeignKey(help_text='', to='publications.TradesBodies')),
                ('owner', models.ForeignKey(help_text='', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'o_trades_heads',
            },
        ),
        migrations.CreateModel(
            name='TradesPhotos',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('hash_id', models.TextField(db_index=True, help_text='')),
                ('original_image_url', models.TextField(help_text='')),
                ('photo_url', models.TextField(help_text='')),
                ('big_thumb_url', models.TextField(help_text='')),
                ('is_title', models.BooleanField(default=False, help_text='')),
                ('created', models.DateTimeField(help_text='', auto_now_add=True)),
                ('publication', models.ForeignKey(help_text='', to='publications.TradesHeads')),
            ],
            options={
                'db_table': 'img_trades_photos',
            },
        ),
        migrations.CreateModel(
            name='TradesRentTerms',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('price', models.DecimalField(null=True, help_text='', max_digits=18, decimal_places=2)),
                ('currency_sid', models.SmallIntegerField(default=0, help_text='')),
                ('is_contract', models.BooleanField(default=False, help_text='')),
                ('period_sid', models.SmallIntegerField(default=1, help_text='')),
                ('add_terms', models.TextField(default=b'', help_text='')),
            ],
            options={
                'db_table': 'o_trades_rent_terms',
            },
        ),
        migrations.CreateModel(
            name='TradesSaleTerms',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('price', models.DecimalField(null=True, help_text='', max_digits=18, decimal_places=2)),
                ('currency_sid', models.SmallIntegerField(default=0, help_text='')),
                ('is_contract', models.BooleanField(default=False, help_text='')),
                ('transaction_sid', models.SmallIntegerField(default=0, help_text='')),
            ],
            options={
                'db_table': 'o_trades_sale_terms',
            },
        ),
        migrations.CreateModel(
            name='WarehousesBodies',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('title', models.TextField(null=True, help_text='')),
                ('description', models.TextField(null=True, help_text='')),
                ('address', models.TextField(null=True, help_text='')),
                ('market_type_sid', models.SmallIntegerField(default=1, help_text='')),
                ('halls_area', models.FloatField(null=True, help_text='')),
                ('plot_area', models.FloatField(null=True, help_text='')),
                ('open_space', models.BooleanField(default=False, help_text='')),
                ('closed_area', models.BooleanField(default=False, help_text='')),
                ('heating_type_sid', models.SmallIntegerField(default=2, help_text='')),
                ('custom_heating_type', models.TextField(null=True, help_text='')),
                ('ind_heating_type_sid', models.SmallIntegerField(default=2, help_text='')),
                ('custom_ind_heating_type', models.TextField(null=True, help_text='')),
                ('electricity', models.BooleanField(default=False, help_text='')),
                ('gas', models.BooleanField(default=False, help_text='')),
                ('sewerage', models.BooleanField(default=False, help_text='')),
                ('hot_water', models.BooleanField(default=False, help_text='')),
                ('cold_water', models.BooleanField(default=False, help_text='')),
                ('ventilation', models.BooleanField(default=False, help_text='')),
                ('security_alarm', models.BooleanField(default=False, help_text='')),
                ('fire_alarm', models.BooleanField(default=False, help_text='')),
                ('security', models.BooleanField(default=False, help_text='')),
                ('add_facilities', models.TextField(null=True, help_text='')),
                ('phone', models.BooleanField(default=False, help_text='')),
                ('phone_lines_count', models.PositiveSmallIntegerField(null=True, help_text='')),
                ('internet', models.BooleanField(default=False, help_text='')),
                ('mobile_coverage', models.BooleanField(default=False, help_text='')),
                ('lan', models.BooleanField(default=False, help_text='')),
                ('parking', models.BooleanField(default=False, help_text='')),
                ('ramp', models.BooleanField(default=False, help_text='')),
                ('storeroom', models.BooleanField(default=False, help_text='')),
                ('offices', models.BooleanField(default=False, help_text='')),
                ('cathead', models.BooleanField(default=False, help_text='')),
                ('wc', models.BooleanField(default=False, help_text='')),
                ('add_buildings', models.TextField(null=True, help_text='')),
                ('railway', models.BooleanField(default=False, help_text='')),
                ('asphalt', models.BooleanField(default=False, help_text='')),
                ('concrete', models.BooleanField(default=False, help_text='')),
                ('ground', models.BooleanField(default=False, help_text='')),
                ('add_driveways', models.TextField(null=True, help_text='')),
                ('transport_stop', models.BooleanField(default=False, help_text='')),
                ('market', models.BooleanField(default=False, help_text='')),
                ('cafe', models.BooleanField(default=False, help_text='')),
                ('bank', models.BooleanField(default=False, help_text='')),
                ('cash_machine', models.BooleanField(default=False, help_text='')),
                ('refueling', models.BooleanField(default=False, help_text='')),
                ('railway_station', models.BooleanField(default=False, help_text='')),
                ('add_showplaces', models.TextField(null=True, help_text='')),
            ],
            options={
                'db_table': 'o_warehouses_bodies',
            },
        ),
        migrations.CreateModel(
            name='WarehousesHeads',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('hash_id', models.TextField(unique=True, db_index=True, default=collective.utils.generate_sha256_unique_id, help_text='')),
                ('state_sid', models.SmallIntegerField(db_index=True, default=1, help_text='')),
                ('for_sale', models.BooleanField(default=False, help_text='')),
                ('for_rent', models.BooleanField(default=False, help_text='')),
                ('created', models.DateTimeField(help_text='', auto_now_add=True)),
                ('modified', models.DateTimeField(help_text='', auto_now=True)),
                ('published', models.DateTimeField(null=True, help_text='')),
                ('deleted', models.DateTimeField(null=True, help_text='')),
                ('actual', models.DateTimeField(null=True, help_text='')),
                ('degree_lat', models.TextField(null=True, help_text='')),
                ('degree_lng', models.TextField(null=True, help_text='')),
                ('segment_lat', models.TextField(null=True, help_text='')),
                ('segment_lng', models.TextField(null=True, help_text='')),
                ('pos_lat', models.TextField(null=True, help_text='')),
                ('pos_lng', models.TextField(null=True, help_text='')),
                ('body', models.ForeignKey(help_text='', to='publications.WarehousesBodies')),
                ('owner', models.ForeignKey(help_text='', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'o_warehouses_heads',
            },
        ),
        migrations.CreateModel(
            name='WarehousesPhotos',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('hash_id', models.TextField(db_index=True, help_text='')),
                ('original_image_url', models.TextField(help_text='')),
                ('photo_url', models.TextField(help_text='')),
                ('big_thumb_url', models.TextField(help_text='')),
                ('is_title', models.BooleanField(default=False, help_text='')),
                ('created', models.DateTimeField(help_text='', auto_now_add=True)),
                ('publication', models.ForeignKey(help_text='', to='publications.WarehousesHeads')),
            ],
            options={
                'db_table': 'img_warehouses_photos',
            },
        ),
        migrations.CreateModel(
            name='WarehousesRentTerms',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('price', models.DecimalField(null=True, help_text='', max_digits=18, decimal_places=2)),
                ('currency_sid', models.SmallIntegerField(default=0, help_text='')),
                ('is_contract', models.BooleanField(default=False, help_text='')),
                ('period_sid', models.SmallIntegerField(default=1, help_text='')),
                ('add_terms', models.TextField(default=b'', help_text='')),
                ('furniture', models.BooleanField(default=False, help_text='')),
                ('air_conditioning', models.BooleanField(default=False, help_text='')),
            ],
            options={
                'db_table': 'o_warehouses_rent_terms',
            },
        ),
        migrations.CreateModel(
            name='WarehousesSaleTerms',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, serialize=False, help_text='', auto_created=True)),
                ('price', models.DecimalField(null=True, help_text='', max_digits=18, decimal_places=2)),
                ('currency_sid', models.SmallIntegerField(default=0, help_text='')),
                ('is_contract', models.BooleanField(default=False, help_text='')),
                ('transaction_sid', models.SmallIntegerField(default=0, help_text='')),
            ],
            options={
                'db_table': 'o_warehouses_sale_terms',
            },
        ),
        migrations.AddField(
            model_name='warehousesheads',
            name='rent_terms',
            field=models.OneToOneField(help_text='', to='publications.WarehousesRentTerms'),
        ),
        migrations.AddField(
            model_name='warehousesheads',
            name='sale_terms',
            field=models.OneToOneField(help_text='', to='publications.WarehousesSaleTerms'),
        ),
        migrations.AddField(
            model_name='tradesheads',
            name='rent_terms',
            field=models.OneToOneField(help_text='', to='publications.TradesRentTerms'),
        ),
        migrations.AddField(
            model_name='tradesheads',
            name='sale_terms',
            field=models.OneToOneField(help_text='', to='publications.TradesSaleTerms'),
        ),
        migrations.AddField(
            model_name='roomsheads',
            name='rent_terms',
            field=models.OneToOneField(help_text='', to='publications.RoomsRentTerms'),
        ),
        migrations.AddField(
            model_name='roomsheads',
            name='sale_terms',
            field=models.OneToOneField(help_text='', to='publications.RoomsSaleTerms'),
        ),
        migrations.AddField(
            model_name='roomsdailyrentreservations',
            name='publication',
            field=models.ForeignKey(help_text='', to='publications.RoomsHeads'),
        ),
        migrations.AddField(
            model_name='officesheads',
            name='rent_terms',
            field=models.OneToOneField(help_text='', to='publications.OfficesRentTerms'),
        ),
        migrations.AddField(
            model_name='officesheads',
            name='sale_terms',
            field=models.OneToOneField(help_text='', to='publications.OfficesSaleTerms'),
        ),
        migrations.AddField(
            model_name='landsheads',
            name='rent_terms',
            field=models.OneToOneField(help_text='', to='publications.LandsRentTerms'),
        ),
        migrations.AddField(
            model_name='landsheads',
            name='sale_terms',
            field=models.OneToOneField(help_text='', to='publications.LandsSaleTerms'),
        ),
        migrations.AddField(
            model_name='housesheads',
            name='rent_terms',
            field=models.OneToOneField(help_text='', to='publications.HousesRentTerms'),
        ),
        migrations.AddField(
            model_name='housesheads',
            name='sale_terms',
            field=models.OneToOneField(help_text='', to='publications.HousesSaleTerms'),
        ),
        migrations.AddField(
            model_name='housesdailyrentreservations',
            name='publication',
            field=models.ForeignKey(help_text='', to='publications.HousesHeads'),
        ),
        migrations.AddField(
            model_name='garagesheads',
            name='rent_terms',
            field=models.OneToOneField(help_text='', to='publications.GaragesRentTerms'),
        ),
        migrations.AddField(
            model_name='garagesheads',
            name='sale_terms',
            field=models.OneToOneField(help_text='', to='publications.GaragesSaleTerms'),
        ),
        migrations.AddField(
            model_name='flatsheads',
            name='rent_terms',
            field=models.OneToOneField(help_text='', to='publications.FlatsRentTerms'),
        ),
        migrations.AddField(
            model_name='flatsheads',
            name='sale_terms',
            field=models.OneToOneField(help_text='', to='publications.FlatsSaleTerms'),
        ),
        migrations.AddField(
            model_name='flatsdailyrentreservations',
            name='publication',
            field=models.ForeignKey(help_text='', to='publications.FlatsHeads'),
        ),
    ]
